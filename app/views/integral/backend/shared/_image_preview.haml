- attribute = attribute.present? ? attribute : :image
- help_text = help_text.present? ? help_text : ''
- image = f.object.send(attribute)
- image_path = image&.file&.url(:medium)
- unlinkHiddenClass = image.present? ? '' : 'hide'
- placeholderHiddenClass = image.present? ? 'hide' : ''

.image-select
  = f.label attribute
  .image-container{ data: { controller: 'image-preview', endpoint_url: list_backend_storage_files_url(format: :json) } }
    = f.hidden_field "#{attribute}_id", { data: { target: 'image-preview.idField' } }
    = image_tag image_url('integral/image-not-set.png'), class: placeholderHiddenClass, data: { target: 'image-preview.placeholderImage' }
    %img{ src: image_path, data: { target: 'image-preview.previewImage' } }
    %ul.menu.align-left.menu-unlinked{ class: placeholderHiddenClass, data: { target: 'image-preview.createActionsList' } }
      %li
        %button.button.clear{ type: :button, data: { target: 'image-preview.addButton', action: 'image-preview#add' } }
          = t('integral.actions.add_image')

    %ul.menu.align-right.menu-linked{ class: unlinkHiddenClass, data: { target: 'image-preview.editActionsList' } }
      %li
        %button.button.clear{ type: :button, data: { target: 'image-preview.removeButton', action: 'image-preview#remove' } }= icon('trash')
      %li
        %button.button.clear{ type: :button, data: { target: 'image-preview.editButton', action: 'image-preview#edit' } }= icon('pencil-square-o')

  - if help_text.present?
    %p.help-text= help_text

