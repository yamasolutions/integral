= simple_form_for [:backend, @resource], validate: true, html: { id: 'resource_form', class: 'are-you-sure' } do |f|
  = f.input :lock_version, as: :hidden
  .row
    .col-md-8.form-group-list
      = f.input :name
      = f.input :email
      - if policy(current_user).manager?
        .cell
          .card
            - roles = Integral::Role.all.map { |role| [role.name, role.id ] }.to_h
            = hidden_field_tag 'user[role_ids][]'
            %table.table.table-striped.js-table--user-roles
              %thead
                %th Role
                %th Reader
                %th Contributer
                %th Editor
                %th Manager
              %tbody
                - for object_name in ['Page', 'Post', 'List', 'File', 'User']
                  %tr
                    %th= object_name
                    - for role_type in ['Reader', 'Contributer', 'Editor', 'Manager']
                      - if roles["#{object_name}#{role_type}"].present?
                        %td
                          %span.checkbox
                            = check_box_tag 'user[role_ids][]', roles["#{object_name}#{role_type}"], @resource.role_ids.include?(roles["#{object_name}#{role_type}"]), id: "#{object_name}#{role_type}", class: 'filled-in', data: { controller: 'permission-checkbox', action: 'permission-checkbox#confirmUnique' }
                            = label_tag "#{object_name}#{role_type}", '&nbsp'.html_safe
                      - else
                        %td

    .col-md-4.form-group-list
      = f.input :notify_me
      .card{ data: { controller: 'image-upload' } }
        = f.input :image, as: :hidden, input_html: { data: { target: 'image-upload.idField' }, value: @resource.image&.blob&.signed_id }
        %h3
          = f.label(:image)

        - if @resource.image.attached?
          = image_tag main_app.url_for(@resource.image), data: { target: 'image-upload.previewImage' }
        - else
          %img{ data: { target: 'image-upload.previewImage' } }
        %button.btn.btn-light{ class: @resource.image.attached? ? '' : 'd-none', type: :button, data: { target: 'image-upload.updateButton', action: 'image-upload#open' } } Update Avatar
        %button.btn.btn-light{ class: @resource.image.attached? ? 'd-none' : '',  type: :button, data: { target: 'image-upload.createButton', action: 'image-upload#open' } } Create Avatar

      = f.input :locale, collection: Integral::User.available_locales, prompt: t('integral.backend.users.prompts.select_language'), include_blank: false

    %div= f.button :button, class: 'btn-primary'

