%html
  = render 'layouts/integral/backend/head'
  %body{ class: "#{controller_name} #{action_name}", data: body_data_attributes }
    = google_tag_manager(:noscript)
    = render partial: 'integral/shared/media_query_indicator'
    .integral-version.is-hidden= "Integral Version: #{Integral::VERSION}"
    = render_flashes

    .app-dashboard{ class: cookies['integral-sidebar'] == 'shrunk' ? 'shrink-large' : 'shrink-medium'}
      .app-dashboard-body.off-canvas-wrapper
        #app-dashboard-sidebar.app-dashboard-sidebar.position-left.off-canvas.off-canvas-absolute.reveal-for-medium{ data: { 'off-canvas' => true }}
          .app-dashboard-sidebar-title-area
            .app-dashboard-close-sidebar
              = image_tag(image_path('integral/backend/logo.png'))
              %button#close-sidebar.app-dashboard-sidebar-close-button.show-for-medium{ data: { 'app-dashboard-toggle-shrink' => true }, 'aria-label' => "Close menu", type: "button" }
                = icon('bars')
            .app-dashboard-open-sidebar
              %button#open-sidebar.app-dashboard-open-sidebar-button.show-for-medium{ data: { 'app-dashboard-toggle-shrink' => true }, 'aria-label' => "open menu", type: "button" }
                = icon('bars')

          .app-dashboard-sidebar-inner
            -# TODO - Set multi-open to false. Currently hides - is-active items. Bug in Foundation
            %ul.menu.vertical{ 'data-responsive-menu' => 'accordion medium-dropdown' }
              = render partial: 'layouts/integral/backend/main_menu_items'

        .app-dashboard-body-content.off-canvas-content{ data: { 'off-canvas-content' => true } }
          -# TODO: Fix stickyness https://github.com/zurb/foundation-sites/pull/10408
          #top-bar.top-bar
            .top-bar-left
              %ul.menu
                %li.menu-text
                  = image_tag(image_path('integral/backend/logo.png'))
                  %h1= page_title

            .top-bar-right
              %ul.menu
                %li.view-site
                  = link_to main_app.root_path, class: 'button clear' do
                    = icon('eye')
                    = t('integral.actions.view_main_site')
                %li
                  %button.button-notifications-dropdown{ type: 'button', data: { toggle: 'notifications-dropdown'}}
                    - if current_user.notifications.unread.any?
                      = icon('circle')
                      = icon('bell-o')
                    - else
                      = icon('bell-o')
                  #notifications-dropdown.dropdown-pane.dropdown-pane--notifications{ data: { notifications: true, load_more_url: current_user.multiple_page_notifications? ? notifications_backend_user_url(current_user, page: 2) : '', dropdown: true, hover: 'true', 'hover-pane' => 'true', 'v-offset' => '35', 'hover-delay' => 50 }}
                    .section.text-center
                      %span.title
                        = current_user.notifications.unread.count
                        Unread
                      %span.subtitle User Notifications
                    .section
                      %ul.menu.vertical.notification-list
                        = render recent_user_notifications.decorate, cached: true
                      - if current_user.multiple_page_notifications?
                        %p.notification-list-loader.js-loader--notifications
                          = icon('spinner', class: 'fa-pulse fa-fw')
                %li
                  %button.button.clear.avatar{ type: 'button', data: { toggle: 'profile-dropdown'}}= image_tag(current_user.avatar.url(:thumbnail), class: 'avatar')
                  #profile-dropdown.dropdown-pane.dropdown-pane--profile{ data: { dropdown: true, hover: 'true', 'hover-pane'=> 'true', 'v-offset'=> '35', 'hover-delay'=> 50 }}
                    .section
                      = image_tag(current_user.avatar.url(:thumbnail), class: 'avatar')
                      %span.name= current_user.name
                      %span.email= current_user.email
                    .section
                      %ul.menu.vertical
                        %li
                          = link_to backend_account_url do
                            = icon('user')
                            %span= t('integral.navigation.profile')
                        %li
                          = link_to edit_backend_user_url(current_user.id) do
                            = icon('cog')
                            %span= t('integral.actions.edit_profile')
                      %hr
                      = link_to t('integral.actions.log_out'), destroy_user_session_path, method: :delete, class: 'button hollow'

                %li.create
                  %button.button{ type: 'button', data: { toggle: 'create-dropdown-top'}}
                    = t('integral.actions.create')
                    %span.chevron.bottom
                  #create-dropdown-top.create-dropdown.dropdown-pane{ data: { dropdown: true, hover: 'true', 'hover-pane'=> 'true', 'v-offset'=> '35', 'hover-delay'=> 50 }}
                    = render partial: 'layouts/integral/backend/create_dropdown'


                %li.toggle-menu
                  %button{ type: 'button', data: { open: 'app-dashboard-sidebar' }}
                    = icon('bars')

          -# TODO: Ideally this would be using Foundations sticky plugin however this does not work within offcanvas (yet)
          -# https://github.com/zurb/foundation-sites/pull/10408
          #bottom-bar.top-bar
            .top-bar-left
              %ul.menu
                %li
                  = link_to main_app.root_path, class: 'button clear' do
                    = icon('eye')
                    = t('integral.actions.view_main_site')

            .top-bar-right
              %ul.menu
                %li
                  %button.button{ type: 'button', data: { toggle: 'create-dropdown-bottom'}}
                    = t('integral.actions.create')
                  #create-dropdown-bottom.create-dropdown.dropdown-pane.top{ data: { dropdown: true, hover: 'true', 'hover-pane'=> 'true', 'v-offset'=> '20', 'hover-delay'=> 50 }}
                    = render partial: 'layouts/integral/backend/create_dropdown'

          #content-area
            = render partial: 'integral/backend/shared/breadcrumbs'
            = yield
    .record-image
      = render partial: 'integral/backend/shared/image_selector'
    = render partial: 'integral/backend/shared/activity_modal'
    = render partial: 'integral/backend/shared/record_selector/modal', locals: { search_path: list_backend_img_index_path, title: t('integral.prompts.select_image'), name: 'Media', create_modal: '#new_image_modal', initialize: true }
